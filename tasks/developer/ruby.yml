---
# Ruby tools and configuration

- name: Ruby developer tooling
  block:

    - name: Skip Ruby Gem doc generation by default
      lineinfile:
        dest: '{{ ansible_env.HOME }}/.gemrc'
        create: true
        line: 'gem: --no-document'
        state: '{{ bool_state }}'

    - name: Ensure user-installed Ruby Gems executables are found
      blockinfile:
        path: '{{ ansible_env.HOME }}/.bash_aliases'
        marker: "# {mark} RUBY-GEM"
        block: |
          # Ensure Ruby Gems installed via `--user-install` are found
          which gem > /dev/null && {
            RUBY_USER_DIR=$(gem environment | grep 'USER INSTALLATION' | sed 's/^.* DIRECTORY: //')
            export PATH="$PATH:${RUBY_USER_DIR}/bin"
          } # ---
        create: true
        state: '{{ bool_state }}'

    - name: Install Ruby development dependencies
      package:
        name: bundler
        state: '{{ state }}'
      become: true

    - name: Clone rbenv (Ruby version management)
      git:
        repo: https://github.com/rbenv/rbenv.git
        dest: '{{ ansible_env.HOME }}/.rbenv'
        depth: 1

    - name: rbenv install command (ruby-build plugin)
      git:
        repo: https://github.com/rbenv/ruby-build.git
        dest: '{{ ansible_env.HOME }}/.rbenv/plugins/ruby-build'
        depth: 1

    - name: Activate rbenv for Bash
      blockinfile:
        path: '{{ ansible_env.HOME }}/.bash_aliases'
        marker: "# {mark} RUBY-RBENV"
        block: |
          which rbenv > /dev/null && {
            export RBENV_ROOT={{ ansible_env.HOME }}/.rbenv
            export PATH="$RBENV_ROOT/bin:$PATH"
            source <(rbenv init - bash)
          }
        create: true

  tags:
    - ruby
