---
# Ruby tools and configuration

- name: Skip Ruby Gem doc generation by default
  lineinfile:
    dest: '{{ ansible_env.HOME }}/.gemrc'
    create: true
    line: 'gem: --no-document'
    state: '{{ bool_state }}'
  tags:
    - ruby

- name: Ensure user-installed Ruby Gems executables are found
  # TODO: implement this properly (separate lines are super-fragile!)
  lineinfile:
    dest: '{{ ansible_env.HOME }}/.bash_aliases'
    create: true
    line: '{{ item }}'
    state: '{{ bool_state }}'
  with_items:
    - '# Ensure Ruby Gems installed via `--user-install` are found'
    - 'which gem > /dev/null && {'
    - "  RUBY_USER_DIR=$(gem environment | grep 'USER INSTALLATION' | sed 's/^.* DIRECTORY: //')"
    - '  export PATH="$PATH:${RUBY_USER_DIR}/bin"'
    - '} # ---'
  tags:
    - ruby
    - bash

- name: Install Ruby development dependencies
  package:
    name: bundler
    state: '{{ state }}'
  become: true
  tags:
    - ruby

- name: Ruby Version Manager
  block:

  - name: Enable PPA for RVM
    apt_repository:
      repo: ppa:rael-gc/rvm
      state: '{{ bool_state }}'

  - name: Install RVM
    package:
      name:
        - software-properties-common
        - rvm
      state: '{{ state }}'

  become: true
  tags:
    - ruby
