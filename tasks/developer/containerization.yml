---
# Containerization software

- name: Docker (Community Edition)
  block:

    - name: Add APT keys for Docker CE
      apt_key:
        id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
        keyserver: p80.pool.sks-keyservers.net
        keyring: /etc/apt/trusted.gpg.d/docker-ce.gpg
        state: '{{ bool_state }}'

    - name: Add APT source for Docker CE
      apt_repository:
        repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} {{ item }}'
        filename: docker-ce
        state: '{{ bool_state }}'
      with_items:
        - stable
        - edge

    - name: Install system packages for working with Docker
      package:
        name:
          - containerd.io
          - docker-ce
          - docker-ce-cli
          - docker-compose
        state: '{{ state }}'

    - name: Add user "{{ ansible_user_id }}" to docker group (requires log out/in again)
      user:
        name: '{{ ansible_user_id }}'
        groups: docker
        append: yes
        state: '{{ bool_state }}'

  become: true
  tags:
    - docker

- name: Podman
  block:

    - name: Add APT keys for Podman
      apt_key:
        url: 'https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_{{ ansible_distribution_version }}/Release.key'
        state: '{{ bool_state }}'

    - name: Add APT source for Podman
      apt_repository:
        repo: 'deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_{{ ansible_distribution_version }}/ /'
        filename: 'devel:kubic:libcontainers:stable'
        state: '{{ bool_state }}'

    - name: Install Podman
      package:
        name: podman
        state: '{{ state }}'

  become: true
  tags:
    - podman

- name: Install podman-compose
  get_url:
    url: https://raw.githubusercontent.com/containers/podman-compose/devel/podman_compose.py
    dest: /usr/local/bin/podman-compose
    mode: 0755
    force: "{{ 'yes' if state == 'latest' else 'no' }}"
    state: '{{ bool_state }}'

  become: true
  tags:
    - podman

- name: Kompose (Compose->Kubernetes converter)
  block:

    - name: Find out whether Kompose is installed
      command: dpkg-query -W kompose
      register: kompose_installed
      failed_when: kompose_installed.rc > 1
      changed_when: kompose_installed.rc == 1

    - name: Install Kompose (Compose->Kubernetes converter)
      apt:
        deb: '{{ kompose_baseurl }}/{{ kompose_package }}'
        state: '{{ bool_state }}'
      when: kompose_installed.rc == 1 or state == 'latest'
      become: true

  tags:
    - kubernetes
