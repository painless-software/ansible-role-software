---
# Containerization software

- name: Docker (Community Edition)
  block:

    - name: Add APT keys for Docker CE
      apt_key:
        url: "https://download.docker.com/linux/{{ ansible_distribution|replace('Kali','Debian')|lower }}/gpg"
        state: '{{ bool_state }}'

    - name: Add APT source for Docker CE
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution|replace('Kali','Debian')|lower }} {{ ansible_lsb.codename|replace('kali-rolling','bullseye') }} {{ item }}"
        filename: docker-ce
        state: '{{ bool_state }}'
      with_items:
        - stable
        - edge

    - name: Install system packages for working with Docker
      package:
        name:
          - containerd.io
          - docker-ce
          - docker-ce-cli
          - golang-docker-credential-helpers
        state: '{{ state }}'

    - name: Uninstall Docker Compose v1 (absoleted by v2, use `docker compose`)
      package:
        name: docker-compose
        state: absent

    - name: Add user "{{ ansible_user_id }}" to docker group (requires log out/in again)
      user:
        name: '{{ ansible_user_id }}'
        groups: docker
        append: yes
        state: '{{ bool_state }}'

  become: true
  tags:
    - docker

- name: Podman and podman-compose
  block:

    - name: Podman
      package:
        name: podman
        state: '{{ state }}'
        purge: yes

    - name: podman-compose
      pip:
        name: podman-compose
        state: '{{ state }}'

  become: true
  tags:
    - podman

- name: Kompose (Compose->Kubernetes converter)
  block:

    - name: Find out whether Kompose is installed
      stat:
        path: /usr/local/bin/kompose
      register: kompose_installed
      changed_when: not kompose_installed.stat.exists

    - name: Install/uninstall Kompose
      block:

        - name: Install kompose binary
          get_url:
            url: "{{ kompose_baseurl }}/v{{ kompose_version }}/kompose-linux-amd64"
            dest: /usr/local/bin/kompose
            mode: 0755
            force: "{{ 'yes' if state == 'latest' else 'no' }}"
          when: not kompose_installed.stat.exists or state == 'latest'

        - name: Uninstall kompose
          file:
            path: /usr/local/bin/kompose
            state: absent
          when: state == 'absent'

      become: true

  tags:
    - kubernetes
