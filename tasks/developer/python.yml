---
# Python tools and configuration (favoring Python 3, as it should be)

- name: Python developer tooling
  block:

    - name: Pip (package installer for Python)
      block:

        - name: Ensure Python 2 Package Installer (pip) is gone
          package:
            name: python-pip
            state: absent
            purge: yes
          become: true

        - name: Python 3 Package Installer (pip)
          package:
            name:
              - python3-pip
              - python-is-python3
            state: '{{ state }}'
          become: true

        - name: Activate Bash autocompletion for pip
          blockinfile:
            path: '{{ ansible_env.HOME }}/.bash_aliases'
            marker: "# {mark} PYTHON-PIP"
            block: |
              which pip3 > /dev/null && {
                source <(pip3 completion --bash)
              }
            create: true
            state: '{{ bool_state }}'

    - name: Pipenv (Pip + Virtualenv)
      pip:
        name: pipenv
        state: '{{ state }}'
      become: true

    - name: Poetry (Python dependency management and packaging)
      block:

        - name: Poetry (environment and packaging tool for Python)
          pip:
            name: poetry
            state: '{{ state }}'
          become: true

        - name: Poetry command completion configuration for Bash
          block:

            - name: Remove Poetry command completion (Bash)
              file:
                path: "{{ ansible_env.HOME }}/.bash_completion"
                state: absent
              when: state in ['absent', 'latest']

            - name: Generate Poetry command completion (Bash)
              shell: "poetry completions bash > {{ ansible_env.HOME }}/.bash_completion"
              args:
                creates: "{{ ansible_env.HOME }}/.bash_completion"
              when: bool_state in ['present', 'latest']

    - name: pyenv (Python version management)
      block:

        - name: Clone pyenv (Python version management)
          git:
            repo: https://github.com/pyenv/pyenv.git
            dest: '{{ ansible_env.HOME }}/.pyenv'
            depth: 1

        - name: Activate pyenv for Bash
          blockinfile:
            path: '{{ ansible_env.HOME }}/.bash_aliases'
            marker: "# {mark} PYTHON-PYENV"
            block: |
              which pyenv > /dev/null && {
                export PYENV_ROOT={{ ansible_env.HOME }}/.pyenv
                export PATH="$PYENV_ROOT/bin:$PATH"
                source <(pyenv init --path)
              }
            create: true
            state: '{{ bool_state }}'

        # See: https://github.com/pyenv/pyenv/wiki/Common-build-problems
        - name: Ensure dependencies for installing other Pythons (pyenv)
          package:
            name:
              - libbz2-dev
              - libffi-dev
              - libreadline-dev
              - libsqlite3-dev
              - libssl-dev
              - zlib1g-dev
            state: '{{ state }}'
          become: true

  tags:
    - python
