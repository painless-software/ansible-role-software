---
# Tools for distribution dependent packaging

- name: Prerequisites for building Debian packages
  package:
    name: debhelper
    state: '{{ bool_state }}'
  become: true
  tags:
    - debian

- name: Nix package manager
  block:

    - name: Uninstall Nix package manager
      block:  # https://nix.dev/manual/nix/2.23/installation/uninstall.html

        - name: Stop and disable Nix daemon
          systemd:
            name: nix-daemon
            state: stopped
            enabled: false
          ignore_errors: true

        - name: Daemon-reload systemd
          systemd:
            daemon_reload: true

        - name: Delete build users 1..32
          user:
            name: 'nixbld{{ item }}'
            state: absent
          loop: '{{ range(1, 33) | list }}'

        - name: Delete build group
          group:
            name: nixbld
            state: absent

        - name: Remove all Nix derivations and configs
          file:
            path: '{{ item }}'
            state: absent
          loop:
            - '/etc/nix'
            - '/etc/profile.d/nix.sh'
            - '/etc/tmpfiles.d/nix-daemon.conf'
            - '/nix'
            - '/root/.nix-channels'
            - '/root/.nix-defexpr'
            - '/root/.nix-profile'
            - '{{ ansible_env.HOME }}/.config/nix/'

        - name: Restore global bash.bashrc
          command: mv /etc/bash.bashrc.backup-before-nix /etc/bash.bashrc
          args:
            removes: /etc/bash.bashrc.backup-before-nix

      become: true
      when: state == 'absent'

    - name: Install Nix package manager
      block:

        - name: Download Nix installer
          get_url:
            url: https://nixos.org/nix/install
            dest: /tmp/nix-install
            mode: '0755'
            force: "{{ 'yes' if state == 'latest' else 'no' }}"

        - name: Nix package manager (multi-user installation)
          command: '/tmp/nix-install --daemon --yes'
          args:
            creates: '/nix/store'
          become: true

        - name: User-local Nix configuration
          copy:
            src: files/developer/packaging/home/.config/nix/
            dest: '{{ ansible_env.HOME }}//.config/nix/'
            force: "{{ 'true' if state == 'latest' else 'false' }}"

      when: state != 'absent'

  tags:
    - nix
