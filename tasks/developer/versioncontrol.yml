---
# Software and configuration for using version control

- name: Install system packages for version control
  package:
    name:
      - git
      - git-extras
      - git-gui
      - gitk
    state: '{{ state }}'
  become: true
  tags:
    - git

- name: Install Git configuration files
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    force: no
  with_items:
    - src: files/developer/versioncontrol/etc/gitconfig
      dest: /etc/gitconfig
    - src: files/developer/versioncontrol/home/.config/
      dest: /etc/skel/.config/
  become: true
  tags:
    - git

- name: Install Git prompt for Bash
  git:
    repo: https://github.com/magicmonty/bash-git-prompt.git
    dest: /opt/bash-git-prompt/
    depth: 1
  become: true
  tags:
    - bash
    - git

- name: Activate Git prompt for Bash
  lineinfile:
    dest: /etc/bash_completion.d/bash-git-prompt
    create: true
    line: '{{ item }}'
    state: '{{ bool_state }}'
  with_items:
    - '# Show an informative bash prompt when working with Git repositories'
    - GIT_PROMPT_ONLY_IN_REPO=1
    - . /opt/bash-git-prompt/gitprompt.sh
  become: true
  tags:
    - bash
    - git

# TODO: git_config name=... email=... (from host user details)

- name: Install Bash-it prompt for Bash
  git:
    repo: https://github.com/Bash-it/bash-it.git
    dest: /opt/bash-it/
    depth: 1
  become: true
  tags:
    - bash
    - git

- name: Activate Bash-it
  lineinfile:
    dest: '{{ ansible_env.HOME }}/.bash_aliases'
    create: true
    line: '{{ item }}'
    state: '{{ bool_state }}'
  with_items:
    - '# -- Bash-it ------'
    - "export BASH_IT='/opt/bash-it'"
    - "# export BASH_IT_THEME='bobby'"
    - "# export BASH_IT_REMOTE='bash-it'"
    - "# export GIT_HOSTING='git@git.domain.com'"
    - "# unset MAILCHECK"
    - "# export IRC_CLIENT='irssi'"
    - "# export TODO='t'"
    - "# export SCM_CHECK=true"
    - "# export SHORT_HOSTNAME=$(hostname -s)"
    - "# export SHORT_USER=${USER:0:8}"
    - "# export SHORT_TERM_LINE=true"
    - "# export VCPROMPT_EXECUTABLE=~/.vcprompt/bin/vcprompt"
    - "# export BASH_IT_AUTOMATIC_RELOAD_AFTER_CONFIG_CHANGE=1"
    - "# export BASH_IT_RELOAD_LEGACY=1"
    - 'source "$BASH_IT"/bash_it.sh'
  tags:
    - bash
    - git

- name: Allow Bash-it features to be enabled
  file:
    path: /opt/bash-it/enabled
    state: directory
    mode: 0777
  become: true
  tags:
    - bash
    - git

- name: Enable Git short aliases via Bash-it
  file:
    src: '/opt/bash-it/{{ item.folder }}/available/{{ item.name }}.{{ item.kind }}.bash'
    dest: '/opt/bash-it/enabled/{{ item.prio }}---{{ item.name }}.{{ item.kind }}.bash'
    state: link
  with_items:
    - { folder: 'aliases', kind: 'aliases', name: 'git', prio: '150' }
    - { folder: 'plugins', kind: 'plugin', name: 'alias-completion', prio: '365' }
  tags:
    - bash
    - git

- name: GitLab CLI (glab)
  block:

    - name: Find out whether glab is installed
      command: dpkg-query -W glab
      register: glab_installed
      failed_when: glab_installed.rc > 1
      changed_when: glab_installed.rc == 1

    - block:

        - name: Uninstall glab (GitLab CLI)
          package:
            name: glab
            state: absent
          when: bool_state == 'absent'

        - name: Install glab (GitLab CLI)
          apt:
            deb: '{{ glab_baseurl }}/{{ glab_package }}'
          when: glab_installed.rc == 1 or state == 'latest'

      become: true

  tags:
    - gitlab
