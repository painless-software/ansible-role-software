---
# Software and configuration for virtualization

- name: libvirt (incl. virt-manager)
  package:
    name:
      - libvirt-bin
      - virt-manager
    state: '{{ state }}'
  become: true
  tags:
    - libvirt

- name: Install VirtualBox
  block:

    - name: Accept license for extension pack (preseeding)
      debconf:
        name: virtualbox-ext-pack
        question: virtualbox-ext-pack/license
        value: 'true'
        vtype: select

    - name: VirtualBox and its extension pack
      package:
        name:
          - virtualbox
          - virtualbox-ext-pack
        state: '{{ state }}'

  become: true
  tags:
    - virtualbox

- name: Vagrant (instead of outdated package from system)
  block:

    - name: Signing key for Hashicorp packages
      apt_key:
        url: https://apt.releases.hashicorp.com/gpg
        keyring: /etc/apt/trusted.gpg.d/hashicorp.gpg
        state: '{{ bool_state }}'

    - name: APT source for Vagrant
      apt_repository:
        repo: 'deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_lsb.codename }} main'
        filename: hashicorp
        state: '{{ bool_state }}'

    - name: Vagrant package from Hashicorp
      package:
        name: vagrant
        state: '{{ state }}'

  become: true
  tags:
    - vagrant

- name: Find out whether VMware Player is installed
  stat:
    path: /usr/bin/vmplayer
  register: vmware_player
  changed_when: not vmware_player.stat.exists
  tags:
    - vmware

- name: VMware Player
  block:

    - name: Install/upgrade/uninstall VMware Player
      block:

        - name: Download VMware Player installer
          get_url:
            url: '{{ vmware_baseurl }}/{{ vmware_package }}'
            dest: '{{ vmware_installer }}'
            mode: 0755
            force: "{{ 'yes' if state == 'latest' else 'no' }}"

        - name: Install VMware Player
          command: '{{ vmware_install_cmd }}'
          when: state == 'present' and not vmware_player.stat.exists or state == 'latest'

        - name: Uninstall VMware Player
          command: '{{ vmware_uninstall_cmd }}'
          when: state == 'absent' and vmware_player.stat.exists

  become: true
  tags:
    - vmware

- name: Citrix client
  block:

    - name: Uninstall procedures (Citrix)
      block:

        - name: Verify if CA certs folder is a symbolic link
          stat:
            path: /opt/Citrix/ICAClient/keystore/cacerts
          register: link

        - name: Remove symlink before uninstallation
          file:
            path: /opt/Citrix/ICAClient/keystore/cacerts
            follow: no
            state: absent
          when: link.stat.islnk is defined and link.stat.islnk

        - name: Uninstall Citrix client (Workspace App)
          package:
            name: icaclient
            state: absent

      become: true
      when: bool_state == 'absent'

    - name: Installation procedures (Citrix)
      block:

        - name: Parse accept hash from Linux download overview
          shell:
            cmd: "wget -q -O- {{ citrix_overview_url }} | grep '{{ citrix_hash_start_marker }}' | sed -e 's/^.*{{ citrix_hash_start_marker }}//' -e 's/{{ citrix_hash_stop_marker }}.*$//' | uniq"
            warn: false
          register: citrix_accepthash

        - name: Install Citrix client (Workspace App)
          apt:
            deb: '{{ citrix_download_url }}'

        - name: Ensure CA certificates (system)
          package:
            name: ca-certificates
            state: latest

        - name: Remove CA certs shipped by Citrix
          file:
            path: /opt/Citrix/ICAClient/keystore/cacerts
            state: absent

        - name: Use system CA certs with Citrix client
          file:
            src: /etc/ssl/certs
            path: /opt/Citrix/ICAClient/keystore/cacerts
            state: link

      become: true
      when: bool_state == 'present'

  tags:
    - citrix
