---
# Utilities used on the command line

- name: A few useful command line tools
  package:
    name:
      - dos2unix
      - iftop
      - lolcat
      - moreutils
      - ncdu
      - ssh
      - tmux
      - tree
      - vim
      - whois
      - xclip
    state: '{{ state }}'
  become: true
  tags:
    - cli

- name: duf (Disk Usage/Free Utility)
  block:

    - name: Find out whether duf is installed
      command: dpkg-query -W duf
      register: duf_installed
      failed_when: duf_installed.rc > 1
      changed_when: duf_installed.rc == 1

    - block:

        - name: Uninstall duf (Disk Usage/Free Utility)
          package:
            name: duf
            state: absent
          when: bool_state == 'absent'

        - name: Install duf (Disk Usage/Free Utility)
          apt:
            deb: '{{ duf_baseurl }}/{{ duf_package }}'
          when: duf_installed.rc == 1 or state == 'latest'

      become: true

  tags:
    - cli

- name: Ensure sane default settings for tmux
  lineinfile:
    dest: '{{ ansible_env.HOME }}/.tmux.conf'
    create: true
    line: 'set -g mouse on'
    state: '{{ bool_state }}'
  tags:
    - cli

- name: Provide some useful aliases
  block:

    - name: ip, ipb, open, pbcopy, pbpaste
      blockinfile:
        path: '{{ ansible_env.HOME }}/.bash_aliases'
        marker: "# {mark} CLI ALIASES"
        block: |
          alias ip='ip --color'
          alias ipb='ip --brief --color'
          alias open='xdg-open'
          alias pbcopy='xclip -selection clipboard'
          alias pbpaste='xclip -selection clipboard -o'
        create: true
        state: '{{ bool_state }}'

    - name: auto-tmux ssh
      blockinfile:
        path: '{{ ansible_env.HOME }}/.bash_aliases'
        marker: "# {mark} TMUX-SSH"
        block: |
          # Auto open tmux in ssh sessions. Use `/usr/bin/ssh` for plain SSH.
          function ssh () {
            TERM=${TERM//-unicode-/-}
            TERM=${TERM//screen\./}
            /usr/bin/ssh -t $@ "tmux attach || tmux new || bash"
          }
        create: true
        state: '{{ bool_state }}'

  tags:
    - cli
